{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://form-model/./src/main.js"],"sourcesContent":["class ValidateForm {\r\n  constructor() {\r\n    this.form = document.querySelector(\".forms\");  \r\n    this.events();\r\n  }\r\n  events() {\r\n    this.form.addEventListener(\"submit\", (e) => {\r\n      this.handleSubmit(e);\r\n    });\r\n  }\r\n  \r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const validFields = this.isAValidField();\r\n    const validPassword = this.isAValidPassword();\r\n    const filledFields = this.fieldIsFilled()\r\n    \r\n    if (validFields && validPassword) {\r\n      alert(\"Formulário enviado!\");\r\n      this.form.submit();\r\n    }\r\n  }\r\n\r\n  fieldIsFilled() {\r\n    const name = document.querySelector('#name')\r\n   \r\n      name.addEventListener('blur', () => {\r\n        classList.add('input-correct')\r\n      })\r\n    \r\n  }\r\n\r\n  isAValidField() {\r\n    let valid = true;\r\n\r\n    for (let errorText of this.form.querySelectorAll(\".error-text\")) {\r\n      errorText.remove();\r\n    }\r\n\r\n    for (let field of this.form.querySelectorAll(\".validate\")) {\r\n      const label = field.previousElementSibling.innerText;\r\n      if (!field.value) {\r\n        this.throwError(field, `O campo ${label.toLowerCase()} é obrigatório`);\r\n        valid = false;\r\n      }\r\n      if (field.classList.contains(\"cpf\")) {\r\n        if (!this.validateCPF(field)) valid = false;\r\n      }\r\n      if (field.classList.contains(\"email\")) {\r\n        if (!this.validateEmail(field)) {\r\n          valid = false;\r\n        }\r\n        }\r\n      }\r\n      return valid;\r\n    }\r\n  \r\n\r\n  validateCPF(field) {\r\n    const cpf = new ValidateCpf(field.value);\r\n    if (field.value && !cpf.validate()) {\r\n      this.throwError(field, \"CPF inválido\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  validateEmail(field) {\r\n    const email = field.value;\r\n    let validEmail = true;\r\n    if (email && !email.includes(\"@\", \".\")) {\r\n      this.throwError(field, \"Insira um e-mail válido\");\r\n      validEmail = false;\r\n    }        \r\n    return validEmail;\r\n  }\r\n\r\n  isAValidPassword() {\r\n    let validPassword = true;\r\n    const pass1 = document.querySelector(\"#password\");\r\n    const pass2 = document.querySelector(\"#password-repeat\");\r\n\r\n    if (pass1.value && pass1.value.length < 8) {\r\n      this.throwError(pass1, \"A senha deve ter no mínimo 8 dígitos\");\r\n      validPassword = false;\r\n    }\r\n    if (pass1.value !== pass2.value) {\r\n      this.throwError(pass1, \"As senhas devem ser exatamente iguais\");\r\n      this.throwError(pass2, \"As senhas devem ser exatamente iguais\");\r\n      validPassword = false;\r\n    }\r\n \r\n    return validPassword;\r\n  }\r\n\r\n  throwError(field, message) {\r\n    const inputs = document.querySelectorAll('.validate')\r\n    const div = document.createElement(\"div\");\r\n    div.innerHTML = message;\r\n    div.classList.add(\"error-text\");\r\n    field.insertAdjacentElement(\"afterend\", div);\r\n  }\r\n}\r\n\r\nconst validate = new ValidateForm();\r\n\r\n// VALIDATING CPF NUMBER\r\n\r\nclass ValidateCpf {\r\n  constructor(sentCpf) {\r\n    Object.defineProperty(this, \"cleanCpf\", {\r\n      value: sentCpf.replace(/\\D+/g, \"\"),\r\n      enumerable: true,\r\n      writable: false,\r\n      configurable: false,\r\n    });\r\n    this.validate();\r\n  }\r\n\r\n  isSequency() {\r\n    return (\r\n      this.cleanCpf.charAt(0).repeat(this.cleanCpf.length) === this.cleanCpf\r\n    );\r\n  }\r\n\r\n  generateNewCpf() {\r\n    const partialCpf = this.cleanCpf.slice(0, -2);\r\n    const firstDigit = ValidateCpf.generateDigit(partialCpf);\r\n    const secondDigit = ValidateCpf.generateDigit(partialCpf + firstDigit);\r\n    this.newCpf = partialCpf + firstDigit + secondDigit;\r\n  }\r\n\r\n  static generateDigit(partialCpf) {\r\n    let total = 0;\r\n    let reverse = partialCpf.length + 1;\r\n\r\n    for (let numString of partialCpf) {\r\n      total += reverse * Number(numString);\r\n      reverse--;\r\n    }\r\n\r\n    const digit = 11 - (total % 11);\r\n    return digit <= 9 ? String(digit) : \"0\";\r\n  }\r\n\r\n  validate() {\r\n    if (!this.cleanCpf) return false;\r\n    if (typeof this.cleanCpf !== \"string\") return false;\r\n    if (this.cleanCpf.length !== 11) return false;\r\n    if (this.isSequency()) return false;\r\n    this.generateNewCpf();\r\n    return this.newCpf === this.cleanCpf;\r\n  }\r\n}\r\n\r\n\r\n// cpf mascara\r\n\r\nconst cpfInput = document.querySelector('.cpf')\r\n\r\ncpfInput.addEventListener('keypress', () => {\r\n  let inputLength = cpfInput.value.length\r\n  if (inputLength === 3 || inputLength === 7){\r\n    cpfInput.value += `.`\r\n  }else if(inputLength === 11){\r\n    cpfInput.value += `-`\r\n  }\r\n})\r\n"],"names":["this","form","document","querySelector","events","addEventListener","e","handleSubmit","preventDefault","validFields","isAValidField","validPassword","isAValidPassword","fieldIsFilled","alert","submit","classList","add","valid","querySelectorAll","remove","field","label","previousElementSibling","innerText","value","throwError","toLowerCase","contains","validateCPF","validateEmail","cpf","ValidateCpf","validate","email","validEmail","includes","pass1","pass2","length","message","div","createElement","innerHTML","insertAdjacentElement","sentCpf","Object","defineProperty","replace","enumerable","writable","configurable","cleanCpf","charAt","repeat","partialCpf","slice","firstDigit","generateDigit","secondDigit","newCpf","isSequency","generateNewCpf","total","reverse","numString","Number","digit","String","cpfInput","inputLength"],"sourceRoot":""}